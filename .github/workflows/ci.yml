name: Continuous integration

on: [push, pull_request]

env:
  HYPERSCAN_VERSION: 5.4.0
  PCRE_VERSION: 8.44
  LLVM_VERSION: 10.0
  CARGO_TERM_COLOR: always

defaults:
  run:
    shell: bash

jobs:
  check:
    name: Check with Rust ${{ matrix.toolchain }}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        toolchain: [stable, nightly]
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -yq libhyperscan-dev

      - name: Install ${{ matrix.toolchain }} Rust
        id: install-rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-rust-${{ matrix.toolchain }}-${{ steps.install-rust.outputs.rustc }}-${{ steps.install-rust.outputs.rustc_hash }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: check

  fmt:
    name: Check format with Rust ${{ matrix.toolchain }}
    needs: check
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        toolchain: [stable, nightly]
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -yq libhyperscan-dev

      - name: Install ${{ matrix.toolchain }} Rust with rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          components: rustfmt
          override: true

      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy with Rust ${{ matrix.toolchain }}
    needs: check
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        toolchain: [stable, nightly]
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -yq libhyperscan-dev

      - name: Install ${{ matrix.toolchain }} Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          components: clippy
          override: true

      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Clippy
        if: matrix.toolchain == 'stable'
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

      - name: Clippy
        if: matrix.toolchain == 'nightly'
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings -A clippy::non_send_fields_in_send_ty

  test:
    name: Tests build-in Hyperscan package with Rust ${{ matrix.toolchain }} @ ${{ matrix.os }}
    needs: check
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-18.04, macos-latest]
        toolchain: [stable, nightly]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Linux dependencies
        if: startsWith(matrix.os, 'ubuntu-')
        run: |
          sudo apt-get update
          sudo apt-get install -yq libhyperscan-dev libpcap-dev pkg-config

      - name: Install MacOS dependencies for testing libraries
        if: startsWith(matrix.os, 'macos-')
        run: |
          brew install hyperscan pkg-config libpcap

      - name: Install ${{ matrix.toolchain }} Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Test Hyperscan v5
        if: matrix.os != 'ubuntu-18.04'
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --release --no-default-features --features=full,v5

      - name: Test Hyperscan v4
        if: matrix.os == 'ubuntu-18.04'
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --release --no-default-features --features=full

      - name: Test Hyperscan v5 with generated binding files
        if: matrix.os != 'ubuntu-18.04'
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --release --no-default-features --features=full,v5,gen

      - name: Test Hyperscan v4 with generated binding files
        if: matrix.os == 'ubuntu-18.04'
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --release --no-default-features --features=full,gen

  build-and-test:
    strategy:
      matrix:
        include:
          - os: macos-latest
            hyperscan: 5.4.0
            pcre: 8.45
            toolchain: stable
            chimera: true
          - os: macos-latest
            hyperscan: 5.2.1
            pcre: 8.45
            chimera: true
          - os: ubuntu-20.04
            hyperscan: 5.4.0
            pcre: 8.45
            chimera: true
          - os: ubuntu-20.04
            hyperscan: 5.2.1
            pcre: 8.45
            chimera: true
          - os: ubuntu-18.04
            hyperscan: 4.7.0
            pcre: 8.41
            chimera: false
    name: Build Hyperscan ${{ matrix.hyperscan }} and Tests with Rust ${{ matrix.toolchain }} @ ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      PKG_CONFIG_PATH: ${{ github.workspace }}/dist/lib/pkgconfig
    steps:
      - name: Install Linux dependencies
        if: startsWith(matrix.os, 'ubuntu-')
        run: |
          sudo apt-get update
          sudo apt-get install -yq build-essential ca-certificates cmake libboost-dev libbz2-dev libpcap-dev \
            ninja-build pkg-config python2.7 ragel wget zlib1g-dev tree

      - name: Install MacOS dependencies
        if: startsWith(matrix.os, 'macos-')
        run: |
          brew update
          brew install pkg-config libpcap ragel cmake boost ninja lzlib wget tree

      - uses: actions/checkout@v2

      - name: Install Hyperscan ${{ matrix.hyperscan }} with PCRE ${{ matrix.pcre }}
        if: steps.cache-hyperscan.outputs.cache-hit == false
        uses: flier/install-hyperscan@main
        with:
          hyperscan_version: ${{ matrix.hyperscan }}
          pcre_version: ${{ matrix.pcre }}
          build_static_lib: on
          src_dir: ${{ runner.temp }}/hyperscan/
          install_prefix: ${{ github.workspace }}/dist
          use_cache: true
          upload_artifact: true

      - run: |
          pkg-config --libs --cflags libhs

      - if: steps.matrix.chimera
        run: |
          pkg-config --libs --cflags libch

      - name: Install stable Rust with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          override: true

      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo test for hyperscan-sys
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p hyperscan-sys --verbose --release --no-default-features --features=full,tracing,static

      - name: Run cargo test for hyperscan-sys with chimera
        if: steps.matrix.chimera
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p hyperscan-sys --verbose --release --no-default-features --features=full,tracing,chimera

      - name: Run cargo test for hyperscan-sys with generated binding
        if: steps.matrix.chimera
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p hyperscan-sys --verbose --release --no-default-features --features=full,tracing,gen

      - name: Run cargo test for hyperscan-sys with chimera and generated binding
        if: steps.matrix.chimera
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p hyperscan-sys --verbose --release --no-default-features --features=full,tracing,chimera,gen

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --release --no-default-features --features=full,static

      - name: Run cargo test with Hyperscan and Chimera API
        if: steps.matrix.chimera
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --release --no-default-features --features=full,chimera

      - name: Run cargo test with Hyperscan v5.4 or later and Chimera API
        if: steps.matrix.chimera && startsWith(matrix.hyperscan, '5.4')
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --release --features=chimera
