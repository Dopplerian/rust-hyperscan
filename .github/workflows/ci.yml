name: Continuous integration

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    shell: bash

jobs:
  check:
    name: Check
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        toolchain: [stable, nightly]
    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -yq libhyperscan-dev

    - name: Install ${{ matrix.toolchain }} Rust
      id: install-rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        override: true

    - name: Checkout
      uses: actions/checkout@v2

    - name: Cache Cargo
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-rust-${{ matrix.toolchain }}-${{ steps.install-rust.outputs.rustc }}-${{ steps.install-rust.outputs.rustc_hash }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Check
      uses: actions-rs/cargo@v1
      with:
        command: check

  fmt:
    name: Rustfmt
    needs: check
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        toolchain: [stable, nightly]
    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -yq libhyperscan-dev

    - name: Install ${{ matrix.toolchain }} Rust with rustfmt
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        components: rustfmt
        override: true

    - name: Checkout
      uses: actions/checkout@v2

    - name: Cache Cargo
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Rustfmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

  clippy:
    name: Clippy
    needs: check
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        toolchain: [stable, nightly]
    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -yq libhyperscan-dev

    - name: Install ${{ matrix.toolchain }} Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        components: clippy
        override: true

    - name: Checkout
      uses: actions/checkout@v2

    - name: Cache Cargo
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: -- -D warnings

  test:
    name: Tests
    needs: check
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        toolchain: [stable, nightly]
    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -yq libhyperscan-dev libpcap-dev

    - name: Install ${{ matrix.toolchain }} Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        override: true

    - name: Checkout
      uses: actions/checkout@v2

    - name: Cache Cargo
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Test
      uses: actions-rs/cargo@v1
      with:
        command: test

  test-v4:
    name: Tests (hyperscan v4)
    needs: check
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        toolchain: [stable, nightly]
    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -yq libhyperscan-dev libpcap-dev

    - name: Install ${{ matrix.toolchain }} Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        override: true

    - name: Checkout
      uses: actions/checkout@v2

    - name: Cache Cargo
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Test
      working-directory: hyperscan
      run: cargo test --verbose --release --no-default-features --features=full

  gen:
    name: Generate binding file
    needs: check
    runs-on: ubuntu-20.04
    env:
      LLVM_VERSION: 10.0
    strategy:
      matrix:
        toolchain: [stable, nightly]
    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -yq libhyperscan-dev libpcap-dev

    - name: Cache LLVM and Clang
      id: cache-llvm
      uses: actions/cache@v2
      with:
        path: ${{ runner.temp }}/llvm
        key: llvm-${{ env.LLVM_VERSION }}

    - name: Install LLVM and Clang
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: ${{ env.LLVM_VERSION }}
        directory: ${{ runner.temp }}/llvm
        cached: ${{ steps.cache-llvm.outputs.cache-hit }}

    - name: Install ${{ matrix.toolchain }} Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.toolchain }}
        override: true

    - name: Checkout
      uses: actions/checkout@v2

    - name: Cache Cargo
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Run cargo test for hyperscan-sys
      working-directory: hyperscan-sys
      run: cargo test --verbose --release --features=gen

    - name: Run cargo test
      working-directory: hyperscan
      run: cargo test --verbose --release

  chimera:
    name: Chimera
    needs: [test, gen]
    runs-on: ubuntu-20.04
    env:
      HYPERSCAN_VERSION: 5.3.0
      HYPERSCAN_ROOT: ${{ github.workspace }}/dist
      PCRE_VERSION: 8.44

    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -yq libboost-dev libpcap-dev ragel tree

    - name: Cache LLVM and Clang
      id: cache-llvm
      uses: actions/cache@v2
      with:
        path: ${{ runner.temp }}/llvm
        key: llvm-10.0

    - name: Install LLVM and Clang
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: "10.0"
        directory: ${{ runner.temp }}/llvm
        cached: ${{ steps.cache-llvm.outputs.cache-hit }}

    - name: Cache Hyperscan Source
      uses: actions/cache@v2
      id: cache-hyperscan-source
      with:
        path: ${{ github.workspace }}/hyperscan
        key: ${{ runner.os }}-source-hyperscan-${{ env.HYPERSCAN_VERSION }}-pcre-${{ env.PCRE_VERSION }}

    - name: Download Hyperscan
      if: steps.cache-hyperscan-source.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/intel/hyperscan/archive/v$HYPERSCAN_VERSION.tar.gz
        mkdir ${{ github.workspace }}/hyperscan
        tar xvf v$HYPERSCAN_VERSION.tar.gz -C ${{ github.workspace }}/hyperscan --strip-components=1

    - name: Download PCRE
      if: steps.cache-hyperscan-source.outputs.cache-hit != 'true'
      run: |
        wget https://ftp.pcre.org/pub/pcre/pcre-$PCRE_VERSION.tar.gz
        mkdir ${{ github.workspace }}/hyperscan/pcre
        tar xvf pcre-$PCRE_VERSION.tar.gz -C ${{ github.workspace }}/hyperscan/pcre --strip-components=1

    - name: Cache Hyperscan Build
      uses: actions/cache@v2
      id: cache-hyperscan-build
      with:
        path: ${{ env.HYPERSCAN_ROOT }}
        key: ${{ runner.os }}-build-hyperscan-${{ env.HYPERSCAN_VERSION }}-pcre-${{ env.PCRE_VERSION }}

    - run: mkdir -p ${{ env.HYPERSCAN_ROOT }}

    - name: Build Hyperscan
      if: steps.cache-hyperscan-build.outputs.cache-hit != 'true'
      uses: ashutoshvarma/action-cmake-build@master
      with:
        configure-options: -DBUILD_STATIC_AND_SHARED=on -DCMAKE_INSTALL_PREFIX=${{ env.HYPERSCAN_ROOT }}
        build-dir: ./build
        build-type: RelWithDebInfo
        source-dir: ${{ github.workspace }}/hyperscan
        install-build: true

    - name: Install stable Rust with clippy and rustfmt
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy
        override: true

    - name: Checkout
      uses: actions/checkout@v2

    - name: Cache Cargo
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: List installed files
      run: tree $HYPERSCAN_ROOT

    - name: Run cargo test for hyperscan-sys
      working-directory: hyperscan-sys
      run: cargo test --verbose --release --features=full,tracing

    - name: Run cargo test for hyperscan-sys with chimera
      working-directory: hyperscan-sys
      run: cargo test --verbose --release --features=full,tracing,chimera

    - name: Run cargo test for hyperscan-sys with chimera and generated binding
      working-directory: hyperscan-sys
      run: cargo test --verbose --release --features=full,tracing,chimera,gen

    - name: Run cargo test
      working-directory: hyperscan
      run: cargo test --verbose --release

    - name: Run cargo test with chimera
      working-directory: hyperscan
      run: cargo test --verbose --release --features=chimera
