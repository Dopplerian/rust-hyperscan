name: Run tests

on: [push, pull_request]

env:
  HYPERSCAN_VERSION: 5.3.0
  PCRE_VERSION: 8.44
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -yq libboost-dev libpcap-dev ragel

    - name: Cache Hyperscan Source
      uses: actions/cache@v2
      id: cache-hyperscan-source
      with:
        path: ${{ github.workspace }}/hyperscan
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/hs*.h') }}

    - name: Download Hyperscan
      if: steps.cache-hyperscan-source.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/intel/hyperscan/archive/v$HYPERSCAN_VERSION.tar.gz
        mkdir ${{ github.workspace }}/hyperscan
        tar xvf v$HYPERSCAN_VERSION.tar.gz -C ${{ github.workspace }}/hyperscan --strip-components=1

    - name: Download PCRE
      if: steps.cache-hyperscan-source.outputs.cache-hit != 'true'
      run: |
        wget https://ftp.pcre.org/pub/pcre/pcre-$PCRE_VERSION.tar.gz
        mkdir ${{ github.workspace }}/hyperscan/pcre
        tar xvf pcre-$PCRE_VERSION.tar.gz -C ${{ github.workspace }}/hyperscan/pcre --strip-components=1

    - name: Cache Hyperscan Build
      uses: actions/cache@v2
      id: cache-hyperscan-build
      with:
        path: ./build
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/libhs.a') }}

    - name: Build Hyperscan
      if: steps.cache-hyperscan-build.outputs.cache-hit != 'true'
      uses: ashutoshvarma/action-cmake-build@master
      with:
        configure-options: -G Ninja -DBUILD_STATIC_AND_SHARED=on -DCMAKE_INSTALL_PREFIX=./build
        build-dir: ./build
        build-type: RelWithDebInfo
        source-dir: ${{ github.workspace }}/hyperscan
        install-build: true

    - name: Cache Cargo
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Checkout
      uses: actions/checkout@v2

    - name: Build
      env:
        HYPERSCAN_ROOT: ./build
      run: cargo build --verbose

    - name: Run tests
      env:
        HYPERSCAN_ROOT: ./build
      run: cargo test --verbose
